(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[nil nil #3=(headline (:raw-value #1="Functional Programming in Scala" :begin 60 :end 343 :pre-blank 0 :contents-begin 94 :contents-end 342 :robust-begin 96 :robust-end 340 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 60 :title #1# :mode nil :granularity element :cached t :parent #13=(org-data (:begin 1 :contents-begin 1 :contents-end 1119 :end 1119 :robust-begin 3 :robust-end 1117 :post-blank 0 :post-affiliated 1 :path "/home/tatephughes/orgfiles/readinglist.org" :mode org-data :CATEGORY "readinglist" :parent nil :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] nil #6=(headline (:raw-value #2="Progress:" :begin 94 :end 343 :pre-blank 0 :contents-begin 107 :contents-end 342 :robust-begin 109 :robust-end 340 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 94 :title #2# :mode section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) -1] [[nil nil #34=(headline (:raw-value #4="1 What is functional programming, p.3" :begin 158 :end 206 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7=#("***" 0 3 (face org-indent)) face (org-done org-done org-level-4) fontified t)) :todo-type done :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 158 :title #4# :mode section :granularity element :cached t :parent #9=(headline (:raw-value #5="Part 1: Introduction to Functional Programming" :begin 107 :end 343 :pre-blank 0 :contents-begin 158 :contents-end 342 :robust-begin 160 :robust-end 340 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 107 :title #5# :mode section :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #32=(headline (:raw-value #8="3 Functional Data Structures, p.34, done up to page 43" :begin 277 :end 343 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-todo org-todo org-level-4) fontified t)) :todo-type todo :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 277 :title #8# :mode nil :granularity element :cached t :parent #9# :org-element--cache-sync-key nil)) 0] #33=(headline (:raw-value #10="2 Getting Started with functional programming in Scala, p.15" :begin 206 :end 277 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-done org-done org-level-4) fontified t)) :todo-type done :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 206 :title #10# :mode nil :granularity element :cached t :parent #9# :org-element--cache-sync-key nil)) 0] #9# 0] [[[[nil nil #16=(headline (:raw-value #11="Progress:" :begin 377 :end 576 :pre-blank 0 :contents-begin 390 :contents-end 574 :robust-begin 392 :robust-end 572 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 377 :title #11# :mode section :granularity element :cached t :parent #31=(headline (:raw-value #12="Catagory Theory for Programmers" :begin 343 :end 576 :pre-blank 0 :contents-begin 377 :contents-end 574 :robust-begin 379 :robust-end 572 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 343 :title #12# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #35=(headline (:raw-value #14="1 Category: The Essence of Composition" :begin 402 :end 451 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-done org-done org-level-4) fontified t)) :todo-type done :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 402 :title #14# :mode section :granularity element :cached t :parent #17=(headline (:raw-value #15="Part 1:" :begin 390 :end 576 :pre-blank 0 :contents-begin 402 :contents-end 574 :robust-begin 404 :robust-end 572 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 390 :title #15# :mode section :granularity element :cached t :parent #16# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #17# 0] [nil nil #36=(headline (:raw-value #18="3 Categories" :begin 483 :end 506 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-done org-done org-level-4) fontified t)) :todo-type done :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 483 :title #18# :mode nil :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) 0] #37=(headline (:raw-value #19="2 Types and functions" :begin 451 :end 483 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-done org-done org-level-4) fontified t)) :todo-type done :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 451 :title #19# :mode nil :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) -1] [[[nil nil #38=(headline (:raw-value #20="5 Products and Co-products" :begin 537 :end 576 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-todo org-todo org-level-4) fontified t)) :todo-type todo :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 537 :title #20# :mode nil :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) 0] [nil nil #39=(headline (:raw-value #21="Just a reference from the end of the bayesian comp notes, another interesting thing to look into when I have time" :begin 604 :end 722 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 604 :title #21# :mode section :granularity element :cached t :parent #23=(headline (:raw-value #22="Variational Bayes methods" :begin 576 :end 722 :pre-blank 0 :contents-begin 604 :contents-end 721 :robust-begin 606 :robust-end 719 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 576 :title #22# :mode nil :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #23# 0] [[nil nil #29=(headline (:raw-value #24="mentioned in the MCMC handbook, Green supposedly generalises MRTH even further; I'm curious." :begin 737 :end 862 :pre-blank 0 :contents-begin 833 :contents-end 862 :robust-begin 835 :robust-end 860 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 737 :title #24# :mode section :granularity element :cached t :parent #27=(headline #25=(:raw-value "Green's work" :begin 722 :end 1119 :pre-blank 0 :contents-begin 737 :contents-end 1119 :robust-begin 739 :robust-end 1117 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 722 :title (#("Green's work" 0 12 (:parent (headline #25#)))) :parent #13# :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #40=(headline (:raw-value #26="I've also found myself wondering if the so called MRTHG algorithms are truly the only way to find chains with the desired equilibrium distributions, as further mentioned in the [[~/MyProjects/Notes/HandbookofMCMC/MCMCnotes.qmd][notes for the handbook]]." :begin 862 :end 1119 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 862 :title #26# :mode nil :granularity element :cached t :parent #27# :org-element--cache-sync-key nil)) 0] #41=(headline (:raw-value #28="Find their work pls" :begin 833 :end 862 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 3 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (face (org-todo org-todo org-level-3) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 833 :title #28# :mode section :granularity element :cached t :parent #29# :org-element--cache-sync-key nil)) 0] #27# 0] #42=(headline (:raw-value #30="4 Kleisli Catagories" :begin 506 :end 537 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 4 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #7# face (org-done org-done org-level-4) fontified t)) :todo-type done :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 506 :title #30# :mode nil :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) 0] #31# 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[nil nil #13# 0] [nil nil #3# 0] (section (:begin 1 :end 60 :contents-begin 1 :contents-end 58 :robust-begin 1 :robust-end 56 :post-blank 2 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [[nil nil #9# 0] [nil [nil nil #32# 0] #33# 1] #34# 1] #6# 1] [[[[nil nil #16# 0] [nil nil #35# 0] #17# 0] [nil nil #36# 0] #37# -1] [[[nil nil #38# 0] [nil nil #39# 0] #23# 0] [[nil nil #29# 0] [nil nil #40# 0] #41# 0] #27# 0] #42# 0] #31# 0] nil nil 0] org-element--cache-compare)))